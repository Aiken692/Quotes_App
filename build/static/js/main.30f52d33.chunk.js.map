{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","Pages/QuoteDetails.js","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","Pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetails","match","useRouteMatch","path","exact","url","Card","card","children","QuoteForm","isEntering","SetIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","onAddQuote","isLoading","loading","NewQuote","MainNavigation","header","logo","nav","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30f52d33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__SJVOH\",\"loading\":\"QuoteForm_loading__UaTyO\",\"control\":\"QuoteForm_control__2hWqt\",\"actions\":\"QuoteForm_actions__z51aY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2HWB-\",\"logo\":\"MainNavigation_logo__1nQia\",\"nav\":\"MainNavigation_nav__1ZvVx\",\"active\":\"MainNavigation_active__2qW5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2STxH\",\"loading\":\"NewCommentForm_loading__2T43E\",\"control\":\"NewCommentForm_control__3TSmQ\",\"actions\":\"NewCommentForm_actions__3_9Uz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2KsyK\",\"sorting\":\"QuoteList_sorting__D_9_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__23WDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__FDhg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__YlEkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2LkUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__3EUd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3T3Qr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3hgVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3SSUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1T9AM\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const querypramas = new URLSearchParams(location.search);\n\n  const isSortingAscending = querypramas.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const ChangeSortingHandler = () => {\n    history.push('/quotes?sort=' + (isSortingAscending ? 'desc' : 'asc'))\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={ChangeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotes-7f773-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react';\r\nimport QuotesList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\n\r\n\r\nconst AllQuotes = () => {\r\n\r\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if(status === 'pending'){\r\n    return <div className='centered'>\r\n      <LoadingSpinner/>\r\n    </div>\r\n  }\r\n\r\n  if(error){\r\n    return <p className='centered focused'>{error}</p>\r\n  }\r\n\r\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n    return <NoQuotesFound/>\r\n  }\r\n\r\n  return (\r\n    <QuotesList quotes={loadedQuotes} />\r\n  )\r\n}\r\n\r\nexport default AllQuotes","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <div className='centered'><LoadingSpinner /></div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport CommentsList from './CommentsList'\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No comments were added yet!</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, {useEffect} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuotes from '../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\n\r\nconst QuoteDetails = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const {quoteId} = params;\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if(status === 'pending'){\r\n    return <div className='centered'>\r\n      <LoadingSpinner/>\r\n    </div>\r\n  }\r\n\r\n  if(error){\r\n    return <p className='centered focused'>{error}</p>\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No Qoute found!</p>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuotes text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\r\n        </div>\r\n      </Route>\r\n\r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default QuoteDetails","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef,  useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, SetIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    SetIsEntering(false);\n  }\n\n  const formForcusHandler = () => {\n    SetIsEntering(true)\n  };\n\n  return (\n    <>\n    <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave? All the entered data will be lost'}/>\n    <Card>\n      <form onFocus={formForcusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, {useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      history.push('/quotes');\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = quoteData => {\r\n    sendRequest(quoteData)\r\n  }\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n  )\r\n}\r\n\r\nexport default NewQuote","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n        <div className={classes.logo}>Great Quotes</div>\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n                <il>\r\n                    <NavLink to='/quotes' className={classes.active}>AllQuotes</NavLink>\r\n                </il>\r\n            </ul>\r\n            <ul>\r\n                <il>\r\n                    <NavLink to='/new-quote' className={classes.active}>Add a Quote !</NavLink>\r\n                </il>\r\n            </ul>\r\n        </nav>\r\n    \r\n    </header>\r\n  )\r\n}\r\n\r\nexport default MainNavigation","import React from 'react';\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport classes from './Layout.module.css'\r\nimport MainNavigation from './MainNavigation';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n        <MainNavigation/>\r\n        <main className={classes.main}>\r\n            {props.children}\r\n        </main>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='centered'>\r\n        <p>Page Not found !</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport AllQuotes from './Pages/AllQuotes';\nimport QuoteDetails from './Pages/QuoteDetails';\nimport NewQuote from './Pages/NewQuote';\nimport Layout from './components/layout/Layout';\nimport NotFound from './Pages/NotFound';\n\nconst App = () => {\n  return (\n    <>\n      <Layout>\n        <Switch>\n          <Route path='/' exact>\n            <Redirect to='/quotes' />\n          </Route>\n          <Route path='/quotes' exact>\n            <AllQuotes />\n          </Route>\n          <Route path='/quotes/:quoteId'><QuoteDetails /></Route>\n          <Route path='/new-quote'><NewQuote /></Route>\n          <Route path='*'><NotFound/></Route>\n        </Switch>\n      </Layout>\n    </>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>,\n    document.getElementById('root'));\n"],"sourceRoot":""}